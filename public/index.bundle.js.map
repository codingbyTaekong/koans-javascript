{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://javascript-basic/./koans/array.js","webpack://javascript-basic/./koans/types.js","webpack://javascript-basic/./koans/variable.js","webpack://javascript-basic/webpack/bootstrap","webpack://javascript-basic/./src/index.js"],"sourcesContent":["\r\n\r\n/**\r\n * 자바스크립트에서 Array는 리스트 형태의 고수준 객체입니다.\r\n * 배열은 리스트와 비슷한 객체로서 연관배열과 달리 인덱스로 문자열을 사용할 수 없으며 무조건 정수만 허용됩니다.\r\n * 배열을 생성하는 방법은 두가지가 있습니다.\r\n * 참고자료 : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\r\n *? 배열 리터럴 표기법 :\r\n * TODO : let numbers = [0,1,2,3,4,5];\r\n * 배열 첫번째 요소\r\n * ! numbers[0] === 0; // true\r\n * 배열 마지막 요소\r\n * ! numbers[numbers.length - 1] === 5;  // true\r\n *? 단일 매개변수 배열 생성자 :\r\n * TODO : let myArray = new Array(5);\r\n *? 복수 매개변수 배열 생성자 :\r\n *  TODO : let strings = new Array(\"안녕\", \"하세요\");\r\n *? 배열의 요소에는 string, number, boolean, undefined, null, object, array, function 등 모든 요소를 담을 수 있습니다.\r\n * \r\n */\r\nmodule.exports = {\r\n    /**\r\n     * 배열의 length의 속성은 배열의 길이를 반환합니다.\r\n     * \r\n     * @param {Array} arr 배열 \r\n     * 전달인자로 들어오는 배열의 길이를 리턴하는 함수를 작성해보세요.\r\n     */\r\n    length : function (arr) {\r\n        if (!Array.isArray(arr)) throw new Error(\"전달인자가 올바르지 않습니다.\");\r\n        let result;\r\n        return result;\r\n    },\r\n    /**\r\n     * 배열은 순서가 있는 리스트 형태의 타입입니다.\r\n     * 배열에는 여러가지 메소드가 있습니다.\r\n     * 반복 메서드인 forEach를 알아봅시다.\r\n     * forEach 메서드는 배열의 첫 번째 요소부터 마지막 요소까지 각각에 대해 실행합니다.\r\n     * \r\n     * 문제 : \r\n     *  forEach 반복문을 활용해서 전달인자로 들어온 배열의 모든 요소의 합을 리턴하는 함수를 만드세요.\r\n     * @returns sum \r\n     */\r\n    sum : function (arr) {\r\n        let sum = 0;\r\n        //\r\n        return sum;\r\n    },\r\n    /**\r\n     * map 메서드는 forEach와 유사하지만 조금은 다른 메서드입니다.\r\n     * forEach 메서드는 배열의 첫 번째 요소부터 마지막 요소까지 각각 실행하는 메서드에 반해,\r\n     * map 메서드는 배열의 첫 번째 요소부터 마지막 요소까지 각각 실행한 후 새로운 배열을 리턴하는 메서드입니다.\r\n     * \r\n     * 문제 :\r\n     * 전달인자로 들어오는 arr의 모든 요소에 + 5를 더한 뒤 리턴하는 함수를 만드세요\r\n     * @param {*} number \r\n     */\r\n    addFive : function (arr) {\r\n        let newArr = [];\r\n\r\n        return newArr;\r\n    },\r\n    /**\r\n     * filter 메서드는 배열의 첫 번째 요소부터 마지막 요소까지 각각 실행하면서 조건에 부합하여 true 값을 전달받은 요소들만을 반환하는 메서드입니다.\r\n     * 문제 :\r\n     * 전달인자로 들어오는 arr의 요소 중 짝수만 리턴하는 함수를 만드세요\r\n     * \r\n     * 예시\r\n     * 인풋 : [0,1,2,3,4,5,6]\r\n     * 아웃풋 : [2,4,6]\r\n     */\r\n    filter : function(arr) {\r\n        let newArr = [];\r\n\r\n        return newArr;\r\n    },\r\n}","module.exports = {\r\n    /*\r\n    자바스크립트의 자료형에는 7가지의 원시 데이터형과 참조 데이터형이 있습니다.\r\n    - 원시 데이터형\r\n        1. Boolean : true || false (참 혹은 거짓)\r\n        2. null : 의도적으로 비어있는 null\r\n        3. undefined : 값이 정이되어 있지 않는 상태\r\n        4. Number : 정수 또는 실수형 숫자\r\n        5. BigInt : 임의 정밀도의 정수(매우 큰 수)\r\n        6. String : 문자열\r\n        7. Symbol : 인스턴스가 고유하고 불변인 데이터 형\r\n    - 참조 데이터형\r\n        1. 배열 : Array 클래스는 리스트 형태의 고수준 객체인 배열을 생성할 때 사용하는 전역 객체입니다.\r\n                  [0,1,2,3,4,5] 처럼 순서가 있는 데이터 꾸러미\r\n        2. 객체 : key-value가 쌍으로 이루어져 있는, 순서가 없는 데이터 꾸러미\r\n    */\r\n\r\n\r\n    /**\r\n    *- boolean형을 담고 있는 변수를 생성해보세요.\r\n       isActive라는 변수는 true 혹은 false의 값을 가져야 합니다.\r\n   */\r\n    printBoolean : function () {\r\n       let isActive;\r\n       return isActive;\r\n    },\r\n    /**\r\n    * - null값을 담고 있는 변수를 생성해보세요.\r\n        개발과정에서 개발자가 의도적으로 null 값을 할당하는 경우가 있습니다.\r\n        개발을 하다보면 어떨 때 사용하면 좋을지 자연스럽게 알게 됩니다.\r\n    */\r\n    printNull : function() {\r\n        let isNull;\r\n        return isNull;\r\n    },\r\n    /**\r\n    *- undefined 값을 담고 있는 변수를 생성해보세요.\r\n        변수를 생성한 후 값을 할당하지면 해당 변수는 undefined가 출력됩니다.\r\n    */\r\n    printUndefined : function() {\r\n        let isUndefined = \"\";\r\n        return isUndefined;\r\n    },\r\n\r\n    /**\r\n    *- 숫자와 문자열을 담고 있는 변수를 생성해보세요.\r\n    */\r\n    printStringAndNumber : function() {\r\n        let myString;\r\n        let myNumber;\r\n        return [myString, myNumber];\r\n    },\r\n\r\n    /**\r\n     * mdn 사이트에서 예제를 확인하세요!\r\n     * https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\r\n     * @param {string} string \r\n     * \r\n     * 파라미터로 들어오는 문자열을 대문자로 변환해서 반환하세요.\r\n     * \r\n     * 예시:)\r\n     * 인풋 : hello world\r\n     * 아웃풋 : HELLO WORLD\r\n     * \r\n     * 문자열을 소문자로 바꿔주는 함수에 대해서도 찾아서 공부해보세요.\r\n     */\r\n    toUpperCase : function (string) {\r\n        let result = \"\"\r\n\r\n        return result\r\n    },\r\n    /**\r\n     * 띄어쓰기를 기준으로 몇 단어를 작성했는지 알려주는 함수를 작성해보세요.\r\n     * mdn 사이트에서 string.split() 메서드에 대해 찾아보면 쉽게 풀 수 있습니다!\r\n     * \r\n     * @param {string} str \r\n     * @returns {number}\r\n     * \r\n     * 예시:)\r\n     * 인풋 : hello world\r\n     * 아웃풋 : 2\r\n     * \r\n     * 띄어쓰기를 기준으로 단어를 나눈다고 했으니 'hello'와 'world' 두 개의 단어가 있습니다.\r\n     */\r\n    printWordslength : function (str) {\r\n        let result = \"\"\r\n        return result;\r\n    },\r\n    /**\r\n     * 문장과 찾고 싶은 단어가 주어지고, \r\n     * 찾고자 하는 단어가 문장에 포함되어 있는 경우,\r\n     * 문장 속에서 단어가 시작되는 위치를 반환하는 함수를 작성해보세요.\r\n     * \r\n     * string.indexOf() 메서드에 대해 공부해보세요!\r\n     * \r\n     * @param {string} sentence \r\n     * @param {string} word \r\n     * @returns {number}\r\n     * \r\n     * 예시:)\r\n     * 인풋:\r\n     * sentence : 나는 쉬는 날에 코딩을 하거나, 운동을 하면서 지내!\r\n     * word : 코딩\r\n     * 아웃풋 : 9\r\n     */\r\n    findIndexOfWord : function (sentence, word) {\r\n        let result;\r\n        return result\r\n    }\r\n    \r\n    /**\r\n     * 참고자료\r\n     * \r\n     * \r\n     * 이미 선언한 문자열 혹은 숫자의 타입을 특정 메서드를 통해 변환할 수 있습니다.\r\n     * ex) let number = 100;\r\n     * console.log(typeof number) ====> output : number\r\n     * console.log(typeof String(number)) ===> output : string\r\n     * \r\n     * let number = \"100\";\r\n     * console.log(typeof number) ====> output : string\r\n     * console.log(typeof number(number)) ===> output : number\r\n     */\r\n}","module.exports = {\r\n    /**\r\n    *< Variable basic 1>\r\n    변수를 선언하는 방법에 대해 알아봅시다.😁\r\n    변수는 데이터를 저장하기 위해 프로그램에 의해 이름을 할당받는 메모리 공간을 의미합니다.\r\n    자바스크립트에서 변수를 선언하는 방법으로는 var / let / const가 존재하며,\r\n    var 와 let의 경우 선언한 변수의 값을 재할당이 가능하지만\r\n    const는 변수의 값을 상수화하기 때문에 재할당이 불가능합니다.\r\n\r\n    - 아래의 문자열이 출력되도록 코드를 작성해보세요.\r\n        출력예시 : 안녕하세요. 제 이름은 김코딩입니다.\r\n    */\r\n    variable : function() {\r\n        // const introduction = \"안녕하세요. 제 이름은 김코딩입니다.\";\r\n        const introduction = \"\";\r\n\r\n        // 리턴문은 수정하지 마세요🥰\r\n        return introduction;\r\n    },\r\n    /**\r\n    *< Variable basic 2>\r\n    연산자와 변수를 합성하는 방법에 대해 알아봅시다.\r\n\r\n    - 아래의 문자열이 출력되도록 코드를 작성해보세요.\r\n        출력예시 : 안녕하세요. 제 이름은 김코딩입니다.\r\n    */\r\n   /**\r\n    * 아래 주석되어 있는 코드는 템플릿 리터럴을 활용한 코드입니다.\r\n    * 구글링을 통해 템플릿 리터럴에 대해 공부해보세요.😘\r\n    * @returns Array<String, String>\r\n    */\r\n    addVariable : function () {\r\n        const introduction = \"안녕하세요. 제 이름은 \" + myName + \"입니다.\"\r\n        // const introduction = `안녕하세요. 제 이름은 ${myName}입니다.`\r\n        \r\n        // 리턴문은 수정하지 마세요🥰\r\n       return [introduction, myName];\r\n    },\r\n    /**\r\n    *< operator basic>\r\n    \r\n    자바스크립트에서 가장 기본적인 연산자는 +, -, *, /, %, ===, !==입니다.\r\n    ※ 여기서 꼭 이해하고 가야할 연산자는 /, %입니다.\r\n        - \"/\" : 두 수를 나눈 몫을 리턴해줍니다.\r\n        - \"%\" : 두 수를 나눈 나머지를 리턴해줍니다.\r\n        - \"===\" : 비교할 두 값이 완전히 일치하는지 판별합니다.\r\n        - \"!==\" : 비교할 두 값이 완전히 불일치하는지 판별합니다.\r\n    \r\n    *- 아래의 문장을 코드로 작성하여 변수에 할당해 보세요.\r\n        1) 6 더하기 5는 11과 같습니다.\r\n        2) 100 빼기 1은 101과 같지 않습니다.\r\n        3) 9 나누기 3의 몫은 3과 같습니다.\r\n        4) 10 나누기 3의 나머지는 0과 같지 않å습니다.\r\n    */\r\n    operator : function(){\r\n        const yourCode_1 = \"\"; \r\n        const yourCode_2 = \"\"; \r\n        const yourCode_3 = \"\"; \r\n        const yourCode_4 = \"\"; \r\n        \r\n\r\n        // 리턴문은 수정하지 마세요🥰\r\n        return [yourCode_1, yourCode_2, yourCode_3, yourCode_4];\r\n    }\r\n    \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const v = require(\"../koans/variable\");\r\nconst t = require(\"../koans/types\");\r\nconst a = require(\"../koans/array\");\r\ndescribe(\"변수와 자료형\", function () {\r\n  this.timeout(5000);\r\n  it(\"변수를 선언하는 방법에 대해 알아봅시다.😁\", function (done) {\r\n    const result = v.variable();\r\n    expect(result).to.be.equal(\"안녕하세요. 제 이름은 김코딩입니다.\")\r\n  });\r\n  it(\"연산자와 변수를 합성하는 방법에 대해 알아봅시다.😁\", function () {\r\n    const result = v.addVariable()[0];\r\n    const name = v.addVariable()[1];\r\n    expect(name).to.not.equal(undefined);\r\n    expect(name).to.be.equal(\"김코딩\");\r\n    expect(result).to.be.equal(\"안녕하세요. 제 이름은 김코딩입니다.\")\r\n  })\r\n  \r\n  it(\"자바스크립트의 기본 연산자에 대해 알아봅시다.😁\", function () {\r\n    const result = v.operator();\r\n    result.forEach(value => expect(value).to.be.equal(true));\r\n  })\r\n    \r\n  it(\"boolean형 데이터를 담고 있는 변수를 생성해봅시다.😁\", function () {\r\n    const result = typeof t.printBoolean();\r\n    expect(result).to.be.equals('boolean');\r\n  })\r\n\r\n  it(\"null값을 담고 있는 변수를 생성해봅시다.😁\", function () {\r\n    const result = t.printNull();\r\n    expect(result).to.be.equals(null);\r\n  })\r\n\r\n  it(\"undefined값을 담고 있는 변수를 생성해봅시다.😁\", function () {\r\n    const result = t.printUndefined();\r\n    expect(result).to.be.equals(undefined);\r\n  })\r\n\r\n  it(\"숫자와 문자열을 담고 있는 변수를 생성해봅시다.😁\", function () {\r\n    const result = t.printStringAndNumber();\r\n    expect(typeof result[0]).to.be.equals('string');\r\n    expect(typeof result[1]).to.be.equals('number');\r\n  })\r\n});\r\ndescribe(\"문자열과 숫자 기초\", function (){\r\n  it(\"영어의 소문자를 대문자로 바꿔보세요.\", function () {\r\n    const result = t.toUpperCase(\"Believe in yourself\");\r\n    expect(result).to.be.equals(\"BELIEVE IN YOURSELF\")\r\n  })\r\n  it(\"띄어쓰기를 기준으로 몇 단어를 작성했는지 알려주는 함수를 작성해보세요.\", function(){\r\n    const temp = \"젋음을 낭비하지 마세요.\";\r\n    const result = t.printWordslength(temp);\r\n    expect(result).to.be(temp.split(' ').length);\r\n  })\r\n  it(\"문장과 찾고 싶은 단어가 주어지고, 찾고자 하는 단어가 문장에 포함되어 있는 경우 문장 속에서 단어가 시작되는 위치를 반환하는 함수를 작성해보세요\", function(){\r\n    const temp = \"절대 어제를 후회하지 마라. 인생은 오늘의 나 안에 있고 내일은 스스로 만드는 것이다\";\r\n    const result = t.findIndexOfWord(temp, \"인생\");\r\n    expect(result).to.be(temp.indexOf(\"인생\"));\r\n  })\r\n})\r\ndescribe(\"배열 기초\", function () {\r\n  it(\"배열의 길이를 리턴하는 함수를 작성해보세요.\", function () {\r\n    const testArr_1 = [0,1,2,3,4,5,6,7];\r\n    const testArr_1_len = a.length(testArr_1);\r\n    const testArr_2 = [null, null, undefined, undefined];\r\n    const testArr_2_len = a.length(testArr_2);\r\n    expect(testArr_1_len).to.be.equals(8);\r\n    expect(testArr_2_len).to.be.equals(4);\r\n  })\r\n  it(\"1~9까지의 합을 forEach메소드를 활용해서 계산해보세요.\", function () {\r\n    const result = a.sum([0,1,2,3,4,5,6,7,8,9]);\r\n    expect(result).to.be.equals(45);\r\n    // expect(typeof result[1]).to.be.equals('number');\r\n  })\r\n\r\n  it(\"전달인자로 들어오는 arr의 모든 요소에 + 5를 더한 뒤 리턴하는 함수를 만드세요.\", function () {\r\n    let myArr = [0,1,2,3,4,5,6,7,8,9];\r\n    const result = a.addFive(myArr);\r\n    expect(result).to.have.members(myArr.map(el=> el+5))\r\n  })\r\n})\r\n\r\n"],"names":["module","exports","length","arr","Array","isArray","Error","result","sum","addFive","newArr","filter","printBoolean","isActive","printNull","isNull","printUndefined","isUndefined","printStringAndNumber","myString","myNumber","toUpperCase","string","printWordslength","str","findIndexOfWord","sentence","word","variable","introduction","addVariable","myName","operator","yourCode_1","yourCode_2","yourCode_3","yourCode_4","v","require","t","a","describe","timeout","it","done","expect","to","be","equal","name","not","undefined","forEach","value","equals","temp","split","indexOf","testArr_1","testArr_1_len","testArr_2","testArr_2_len","myArr","have","members","map","el"],"sourceRoot":""}